# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

#name: CI/nuget publish

#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

#jobs:
#  build:
#    env:
#      BUILD_CONFIG: 'Release'
#      SOLUTION: 'Solid.Repository.sln'
#    runs-on: ubuntu-latest

#    steps:
#    - uses: actions/checkout@v3
    
#    - name: Get Build Version
#      run: |
#        Import-Module .\build\GetBuildVersion.psm1
#        Write-Host $Env:GITHUB_REF
#        $version = GetBuildVersion -VersionString $Env:GITHUB_REF
#        echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
#      shell: pwsh

#    - name: Version Number
#      run : echo "$version"

#    - name: Setup NuGet
#      uses: NuGet/setup-nuget@v1.0.5

#    - name: Restore dependencies
#      run: nuget restore $SOLUTION

#    - name: Setup .NET
#      uses: actions/setup-dotnet@v3
#      with:
#         dotnet-version: 6.0.x

#    - name: Build
#      run: dotnet build $SOLUTION --configuration $BUILD_CONFIG -p:Version=$BUILD_VERSION --no-restore

#    - name: Test
#      run: dotnet test --verbosity normal
      
#    - name: Publish
#      if: startsWith(github.ref, 'refs/heads/release')
#      run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}


name: "Deploy to NuGet"

on:
  push:
    branches: 
        [ "main" ]
    tags:
    - 'v*'


env:
    BUILD_CONFIG: 'Release'
    SOLUTION: 'Solid.Repository.sln'
    #PROJECT_PATH: 'PasswordBoxMVVM/PasswordBoxMVVM.csproj'
    PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}\output
    NUGET_SOURCE_URL: 'https://api.nuget.org/v3/index.json'

jobs:
  deploy:
    name: 'Deploy'
    runs-on: 'windows-latest'
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v3

    - name: 'Install dotnet'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: 'Restore packages'
      run: dotnet restore ${{ env.SOLUTION }}

    - name: 'Build project'
      run: dotnet build ${{ env.SOLUTION }} --no-restore --configuration  ${{ env.BUILD_CONFIG }}

    - name: 'Get Version'
      id: version
      uses: battila7/get-version-action@v2

    - name: 'Pack project'
      run: dotnet pack ${{ env.SOLUTION }} --no-restore --no-build --configuration ${{ env.BUILD_CONFIG }} --include-symbols -p:PackageVersion=0.0.1-test --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

    - name: 'Push package'
      run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s ${{ env.NUGET_SOURCE_URL }}